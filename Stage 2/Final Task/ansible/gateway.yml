- become: true
  gather_facts: false
  hosts: gateway
  tasks:
  - name: "Prometheus Data for Docker Volume"
    file:
      path: "/opt/data/prometheus"
      state: directory
      mode: '0777'
  - name: "Prometheus Config"
    copy:
      dest: "/tmp/prometheus.yml"
      content: |
        global:
          scrape_interval: 30s
        scrape_configs:
          - job_name: 'node'
            scrape_interval: 10s
            static_configs:
              - targets: ['node1.dio.studentdumbways.my.id','node2.dio.studentdumbways.my.id']
          - job_name: 'nginx'
            scrape_interval: 10s
            static_configs:
              - targets: ['node1.dio.studentdumbways.my.id:9113']
  - name: "NGINX Config"
    copy:
      dest: "/tmp/dumbways.conf"
      content: |
        # Generated by $(certbot --nginx)
        ###: https://grafana.com/tutorials/run-grafana-behind-a-proxy/#configure-nginx
        #--- /tmp/dumbways_nginx.conf.orig
        #+++ /tmp/dumbways_nginx.conf
        #@@ -1,3 +1,8 @@
        #+map $http_upgrade $connection_upgrade {
        #+    default upgrade;
        #+    '' close;
        #+}
        #+
        # server {
        #     server_name grafana.dio.studentdumbways.my.id;
        #
        #@@ -53,9 +58,18 @@
        #     server_name resmon.dio.studentdumbways.my.id;
        #
        #     location / {
        #+             proxy_set_header Host $http_host;
        #              proxy_pass http://<appserver_ip>:3000;
        #     }
        #
        #+    location /api/live/ {
        #+             proxy_http_version 1.1;
        #+             proxy_set_header Upgrade $http_upgrade;
        #+             proxy_set_header Connection $connection_upgrade;
        #+             proxy_set_header Host $http_host;
        #+             proxy_pass http://resmon.dio.studentdumbways.my.id;
        #+  }
        #+
        #
        #     listen 443 ssl; # managed by Certbot
        #     ssl_certificate /etc/letsencrypt/live/dio.studentdumbways.my.id/fullchain.pem; # managed by Certbot
        ###: https://nginx.org/en/docs/http/ngx_http_stub_status_module.html#example (Inside resmon.dio.studentdumbways.my.id domain)
        #--- /tmp/dumbways.conf.orig
        #+++ /tmp/dumbways.conf
        # map $http_upgrade $connection_upgrade {
        #   default upgrade;
        #   '' close;
        #@@ -61,7 +61,8 @@
        #              proxy_set_header Host $http_host;
        #              proxy_pass http://<appserver_ip>:3000;
        #     }
        #+    location /metrics {
        #+             stub_status on;
        #+     }
        #   location /api/live/ {
        #            proxy_http_version 1.1;
        #            proxy_set_header Upgrade $http_upgrade;
  - name: "Install NGINX and Prometheus"
    community.docker.docker_compose:
      project_name: rproxy-and-monitoring
      definition:
        version: '2'
        services:
          reverse-proxy:
            image: nginx
            ports:
              - 80:80
              - 443:443
            volumes:
              - /tmp/dumbways.conf:/etc/nginx/conf.d/dumbways.conf
              - /etc/letsencrypt:/etc/letsencrypt:ro
          node-exporter:
            image: bitnami/node-exporter
            ports:
              - 9100:9100
            expose:
              - 9100
          prometheus:
            image: prom/prometheus
            ports:
              - 9090:9090
            expose:
              - 9090
            volumes:
              - /tmp/prometheus.yml:/etc/prometheus/prometheus.yml
              - /opt/data/prometheus:/prometheus
            depends_on:
              - node-exporter
          nginx-exporter:
            image: nginx/nginx-prometheus-exporter:latest
            ports:
              - 9113:9113
            expose:
              - 9113
            command:
              - "-nginx.scrape-uri=https://resmon.dio.studentdumbways.my.id/metrics"
              - "-web.telemetry-path=/metrics"
            depends_on:
              - prometheus
      state: present
    register: output
